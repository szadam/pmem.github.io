<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Memkind on PMem.io</title><link>https://pmem.io/announcements/memkind/</link><description>Recent content in Memkind on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 08 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://pmem.io/announcements/memkind/index.xml" rel="self" type="application/rss+xml"/><item><title>Memkind 1.14.0 Release</title><link>https://pmem.io/announcements/2022/memkind-v1-14-0-release/</link><pubDate>Fri, 08 Jul 2022 00:00:00 +0000</pubDate><guid>https://pmem.io/announcements/2022/memkind-v1-14-0-release/</guid><description>We&amp;rsquo;ve recently released a new version of the memkind library. Many thanks to all who contributed for making this release happen.
Most notably, this release upgrades the internally used jemalloc version to the most recent one – 5.3.0. This release also includes a binary for enabling memkind tiering functionality in an easy way. One can use this binary to run the given program with the usage of the memkind tiering feature with just a minimal configuration input from the user.</description></item><item><title>Memkind 1.13.0 Release</title><link>https://pmem.io/announcements/2021/memkind-1-13-0-release/</link><pubDate>Thu, 23 Dec 2021 12:59:41 +0100</pubDate><guid>https://pmem.io/announcements/2021/memkind-1-13-0-release/</guid><description>Hi,
I’m glad to announce that memkind 1.13.0 has been released.
Most notably, this release introduces a fixed kind for user-supplied memory area (along with the C++ allocator). Creating a fixed kind can be done by using memkind_create_fixed() function. This release also includes a new function to get the memory capacity of nodes available to a given kind - memkind_get_capacity().
For more information, see memkind man_page:
http://memkind.github.io/memkind/man_pages/memkind.html
The source code and the release note are available under the following link:</description></item><item><title>Memkind 1.12.0 Release</title><link>https://pmem.io/announcements/2021/memkind-1-12-0-release/</link><pubDate>Thu, 02 Sep 2021 20:11:31 +0000</pubDate><guid>https://pmem.io/announcements/2021/memkind-1-12-0-release/</guid><description>Hi,
I’m glad to announce that memkind 1.12.0 has been released.
Most notably, this release introduces memory tiering feature provided in memkind as an interposer library. The library allows making allocations with the usage of multiple kinds keeping a specified ratio between them. This ratio determines how much of the total allocated memory should be allocated with each kind.
Further details on this brand new feature can be found here:</description></item><item><title>Memkind v1.11.0 Release</title><link>https://pmem.io/announcements/2021/memkind-1-11-0-release/</link><pubDate>Fri, 26 Feb 2021 20:22:59 +0000</pubDate><guid>https://pmem.io/announcements/2021/memkind-1-11-0-release/</guid><description>Hi,
I am pleased to announce that memkind 1.11.0 has been released. In the memkind 1.11.0 release, we focus our efforts on support for the Heterogeneous Memory Attribute Table (HMAT). With HMAT, we recognize different memory types (e.g., high bandwidth memory, low latency memory) in a unified way.
With this release comes:
Provided a function to verify if path supports DAX - memkind_check_dax_path() Provided a NUMA node interleave variant for MEMKIND_DAX_KMEM (MEMKIND_DAX_KMEM_INTERLEAVE) Provided a function to enable/disable background threads - memkind_set_bg_threads() Provided a function to print statistics - memkind_stats_print() Extended configure mechanism by enable-memkind-initial-exec-tls option Extended memkind to support HMAT Provided memory property abstraction (MEMKIND_HIGHEST_CAPACITY*,MEMKIND_LOWEST_LATENCY_LOCAL*, MEMKIND_HIGHEST_BANDWIDTH_LOCAL*)* Extended support for MEMKIND_HBW to platforms with full HMAT support (kernel+hardware) The source code and release note are available in: https://github.</description></item></channel></rss>